{"version":3,"sources":["components/Input.js","components/Button.js","components/ContactForm.js","components/Contact.js","components/ContactList.js","App.js","index.js"],"names":["Input","label","type","name","value","onChange","Button","className","children","onClick","ContactForm","addContact","useState","setName","number","setNumber","onSubmit","e","preventDefault","trim","toast","error","target","Contact","contact","onDelete","id","console","log","RiDeleteBin6Line","size","color","ContactsList","contacts","map","App","JSON","parse","window","localStorage","getItem","contactsData","setContacts","filter","setFilter","useEffect","setItem","stringify","uuidv4","normalizedName","toLowerCase","find","success","length","normalizedFilter","includes","getFiltrationContacts","contactDeleteId","currentTarget","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.591e2ab9.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function Input ({label, type, name, value, onChange}) {\r\n \r\n    return (\r\n        <label> {label}\r\n            <input type={type} name={name} value={value} onChange={onChange}/>\r\n        </label>\r\n    )\r\n}\r\n\r\nInput.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\n\r\nexport default function Button({className, type, children, onClick}) {\r\n    return (\r\n        <button className={className} type={type} onClick={onClick}>{children}</button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    className: PropTypes.string,\r\n    type: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object,), PropTypes.element, PropTypes.string,]),\r\n    onClick: PropTypes.func,\r\n}","\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Input from './Input';\r\nimport Button from './Button';\r\n\r\nexport default function ContactForm({ addContact }) {\r\n    \r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n\r\n    function handleNameChange (e) {\r\n        const value = e.target.value;\r\n        setName(value);\r\n    }\r\n\r\n    function handleNamberChange (e) {\r\n        const value = e.target.value;\r\n        setNumber(value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (name.trim() === '' || number.trim() === '') {\r\n            toast.error('Заполните поле');\r\n            return\r\n        }\r\n        \r\n        addContact(name, number);\r\n        reset();\r\n    }\r\n\r\n    function reset () {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n\r\n    return (\r\n        <form key='AddContactForm' onSubmit={handleSubmit}>\r\n            <Input label=\"Name\" type=\"text\" name=\"name\" value={name} onChange={handleNameChange} />\r\n            <Input label=\"Number\" type=\"text\" name=\"number\" value={number} onChange={handleNamberChange} />\r\n            <Button type='submit'  children='Add contact'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nContactForm.propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport { RiDeleteBin6Line }  from 'react-icons/ri';\r\n\r\nexport default function Contact({ contact, onDelete }) {\r\n\r\n    const { id, name, number } = contact;\r\n    console.log(RiDeleteBin6Line);\r\n\r\n    return (\r\n        <li>\r\n            <p>{name} {number}</p> \r\n            <button id={id} onClick={onDelete}>\r\n                <RiDeleteBin6Line size={'20px'} color={'#c41818'}/>\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,    \r\n    onDelete: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\n\r\nimport Contact from './Contact';\r\n\r\nexport default function ContactsList({ contacts, onDelete }) {\r\n\r\n    return (\r\n        <ul>\r\n            {contacts.map(contact => <Contact key={contact.id} contact={ contact } onDelete={ onDelete }/>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object,).isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Input from './components/Input';\r\n\r\nimport contactsData from './data/contact.json';\r\n\r\nfunction App() {\r\n\r\n    const [contacts, setContacts] = useState(() => JSON.parse(window.localStorage.getItem('contacts')) ?? contactsData); \r\n    const [filter, setFilter] = useState('');\r\n\r\n    useEffect(() => window.localStorage.setItem('contacts', JSON.stringify(contacts)), [contacts]);\r\n\r\n\r\n    function addContact (name, number) {\r\n        const id = uuidv4();\r\n        const normalizedName = name.toLowerCase();\r\n        const hasContact = contacts.find(({name}) => name.toLowerCase() === normalizedName);\r\n\r\n        if(hasContact) {\r\n            toast.error(`Контакт с именем ${name} уже существует`)\r\n\r\n        } else {\r\n            setContacts([...contacts, {id, name, number}])\r\n            toast.success('Контакт успешно добален')\r\n        }\r\n    }\r\n\r\n    function deleteContact (e) {\r\n        const contactDeleteId = e.currentTarget.id;\r\n\r\n        setContacts(contacts.filter(contact => contact.id !== contactDeleteId));\r\n        toast.success('Контакт был удалён');\r\n    }\r\n\r\n    function getFiltrationContacts () {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(({name}) => name.toLowerCase().includes(normalizedFilter));\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <h1>Phonebook</h1>\r\n            <ContactForm addContact={addContact} />\r\n\r\n            {contacts.length !== 0 && \r\n            <>\r\n                <h2>Contacts</h2>\r\n                <Input  label=\"Find contacts by name\" type=\"text\" name=\"filter\" value={filter} onChange={(e) => {setFilter(e.target.value)}}/>\r\n                <ContactList contacts={getFiltrationContacts()} onDelete={deleteContact}/>\r\n            </>\r\n            }\r\n\r\n            <ToastContainer autoClose={2500}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}